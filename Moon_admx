-- üêæ Adopt Me Fake Pet & Toy Spawner GUI (client-side)
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")

-- Main GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FakePetSpawner"
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 340, 0, 360)
mainFrame.Position = UDim2.new(0.5, -170, 0.4, -180)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 12)
uiCorner.Parent = mainFrame

local uiStroke = Instance.new("UIStroke")
uiStroke.Color = Color3.fromRGB(255, 0, 200)
uiStroke.Thickness = 2
uiStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uiStroke.Parent = mainFrame

-- Animate RGB border
task.spawn(function()
    while task.wait(0.1) do
        local hue = tick() % 5 / 5
        uiStroke.Color = Color3.fromHSV(hue, 1, 1)
    end
end)

-- Title
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 30)
titleLabel.Position = UDim2.new(0,0,0,0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text ="üí∏ Moon Pet Spawner (Beta Version)"
titleLabel.Font = Enum.Font.FredokaOne
titleLabel.TextSize = 20
titleLabel.TextColor3 = Color3.fromRGB(240, 240, 255)
titleLabel.Parent = mainFrame

-- Signature
local signatureLabel = Instance.new("TextLabel")
signatureLabel.Size = UDim2.new(1, 0, 0, 20)
signatureLabel.Position = UDim2.new(0, 0, 0, 30)
signatureLabel.BackgroundTransparency = 1
signatureLabel.Text = " dc @c4rlet "
signatureLabel.Font = Enum.Font.FredokaOne
signatureLabel.TextSize = 14
signatureLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
signatureLabel.Parent = mainFrame

-- Tabs container
local tabFrame = Instance.new("Frame")
tabFrame.Size = UDim2.new(1, 0, 0, 30)
tabFrame.Position = UDim2.new(0, 0, 0, 55)
tabFrame.BackgroundTransparency = 1
tabFrame.Parent = mainFrame

local function createTab(name, pos)
    local tab = Instance.new("TextButton")
    tab.Size = UDim2.new(0.5, 0, 1, 0)
    tab.Position = UDim2.new(pos,0,0,0)
    tab.Text = name
    tab.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
    tab.Font = Enum.Font.FredokaOne
    tab.TextColor3 = Color3.new(1,1,1)
    tab.TextSize = 16
    tab.Parent = tabFrame

    local c = Instance.new("UICorner")
    c.CornerRadius = UDim.new(0, 8)
    c.Parent = tab

    return tab
end

local petTab = createTab("Pets",0)
local toyTab = createTab("Toys",0.5)

-- Tab contents
local petContent = Instance.new("Frame")
petContent.Size = UDim2.new(1, 0, 1, -95)
petContent.Position = UDim2.new(0, 0, 0, 85)
petContent.BackgroundTransparency = 1
petContent.Visible = true
petContent.Parent = mainFrame

local toyContent = Instance.new("Frame")
toyContent.Size = UDim2.new(1, 0, 1, -95)
toyContent.Position = UDim2.new(0, 0, 0, 85)
toyContent.BackgroundTransparency = 1
toyContent.Visible = false
toyContent.Parent = mainFrame

petTab.MouseButton1Click:Connect(function()
    petContent.Visible = true
    toyContent.Visible = false
end)

toyTab.MouseButton1Click:Connect(function()
    petContent.Visible = false
    toyContent.Visible = true
end)

-- Pet name textbox
local petNameBox = Instance.new("TextBox")
petNameBox.Size = UDim2.new(0.85, 0, 0, 28)
petNameBox.Position = UDim2.new(0.075, 0, 0, 0)
petNameBox.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
petNameBox.TextColor3 = Color3.new(1,1,1)
petNameBox.TextSize = 14
petNameBox.Font = Enum.Font.FredokaOne
petNameBox.PlaceholderText = "Enter Pet Name"
petNameBox.Parent = petContent
Instance.new("UICorner", petNameBox)

-- Potion buttons
local selectedPotion = "NO POTION"
local potionOptions = {"NO POTION","F","R","FR","NFR","MFR"}
for i, potion in ipairs(potionOptions) do
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0.15, 0, 0, 22)
    btn.Position = UDim2.new(0.05 + (i-1)*0.16, 0, 0.15, 0)
    btn.Text = potion
    btn.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
    btn.Font = Enum.Font.FredokaOne
    btn.TextColor3 = Color3.new(1,1,1)
    btn.TextSize = 12
    btn.Parent = petContent
    Instance.new("UICorner", btn)

    btn.MouseButton1Click:Connect(function()
        selectedPotion = potion
        for _, other in ipairs(petContent:GetChildren()) do
            if other:IsA("TextButton") and table.find(potionOptions, other.Text) then
                other.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
            end
        end
        btn.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
    end)
end

-- Helper to create main action buttons with curved borders + RGB outline
local function createMainButton(text, posY, parent)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0.6, 0, 0, 28)
    btn.Position = UDim2.new(0.2, 0, posY, 0)
    btn.Text = text
    btn.BackgroundColor3 = Color3.fromRGB(50, 50, 80)
    btn.Font = Enum.Font.FredokaOne
    btn.TextColor3 = Color3.new(1,1,1)
    btn.TextSize = 16
    btn.Parent = parent

    local c = Instance.new("UICorner")
    c.CornerRadius = UDim.new(0, 10)
    c.Parent = btn

    local stroke = Instance.new("UIStroke")
    stroke.Thickness = 2
    stroke.Parent = btn
    task.spawn(function()
        while task.wait(0.1) do
            local hue = tick() % 5 / 5
            stroke.Color = Color3.fromHSV(hue,1,1)
        end
    end)
    return btn
end

local spawnBtn = createMainButton("Spawn Pet",0.35,petContent)
local highTierBtn = createMainButton("Spawn All High Tier",0.50,petContent)

-- Toy spawner UI
local toyBox = Instance.new("TextBox")
toyBox.Size = UDim2.new(0.85, 0, 0, 28)
toyBox.Position = UDim2.new(0.075, 0, 0, 0)
toyBox.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
toyBox.TextColor3 = Color3.new(1,1,1)
toyBox.TextSize = 14
toyBox.Font = Enum.Font.FredokaOne
toyBox.PlaceholderText = "Enter Toy Name"
toyBox.Parent = toyContent
Instance.new("UICorner", toyBox)

local spawnToyBtn = createMainButton("Spawn Toy",0.35,toyContent)

-- High tier list
local highTierPets = {
    "Shadow Dragon","Bat Dragon","Frost Dragon","Giraffe","Owl","Parrot","Crow",
    "Evil Unicorn","Arctic Reindeer","Hedgehog","Dalmatian","Turtle","Kangaroo","Lion",
    "Elephant","Rhino","Cow","Blazing Lion","African Wild Dog","Diamond Butterfly","Shark Puppy","Happy Clam","Jellyfish","Goat","Balloon Unicorn","Haetae","Pelican","Flamingo","Albino Monkey","Goose","Crocodile","Candyfloss Chick","Caterpillar","Peppermint Penguin","Lion Cub","Puffer Fish","Flaming Fox","Husky","Slime","Mule","Sheeeeep","Pudding Pup","Nessie","Hare","Tortuga de la Isla","Hot Doggo","Honey Badger","Puffin","Mini Pig","Ring-tailed Lemur","Border collie","Irish Water Spaniel","Fairy Bat Dragon","Cupid Bat Dragon","Strawberry Shortcake Bat Dragon","Chocolate Chip Bat Dragon"
}

-- Load Adopt Me modules
local Loads = require(game.ReplicatedStorage.Fsys).load
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")

-- Spawn fake pet
local function spawnFakePet(petName, potionType)
    potionType = potionType or "NO POTION"
    local function genProps()
        return {
            flyable = potionType == "F" or potionType == "FR" or potionType == "NFR" or potionType == "MFR",
            rideable = potionType == "R" or potionType == "FR" or potionType == "NFR" or potionType == "MFR",
            neon = potionType == "NFR" or potionType == "MFR",
            mega_neon = potionType == "MFR",
            potionType = potionType,
            age = math.random(1,6)
        }
    end
    for _, petData in pairs(InventoryDB.pets or {}) do
        if petData.name == petName then
            local fake_uuid = HttpService:GenerateGUID(false)
            local new_pet = table.clone(petData)
            new_pet.unique = fake_uuid
            new_pet.category = "pets"
            new_pet.properties = genProps()
            new_pet.anti_stack_id = tostring(math.random(100000,999999)).."-"..tick()
            Inventory.pets[fake_uuid] = new_pet
            break
        end
    end
end

-- Spawn fake toy
local function spawnFakeToy(toyName)
    for _, toyData in pairs(InventoryDB.toys or {}) do
        if toyData.name == toyName then
            local fake_uuid = HttpService:GenerateGUID(false)
            local new_toy = table.clone(toyData)
            new_toy.unique = fake_uuid
            new_toy.category = "toys"
            new_toy.anti_stack_id = tostring(math.random(100000,999999)).."-"..tick()
            Inventory.toys[fake_uuid] = new_toy
            break
        end
    end
end

-- Button connections
spawnBtn.MouseButton1Click:Connect(function()
    if petNameBox.Text ~= "" then
        spawnFakePet(petNameBox.Text, selectedPotion)
    end
end)

highTierBtn.MouseButton1Click:Connect(function()
    for _, petName in ipairs(highTierPets) do
        spawnFakePet(petName, selectedPotion)
        task.wait(0.1)
    end
end)

spawnToyBtn.MouseButton1Click:Connect(function()
    if toyBox.Text ~= "" then
        spawnFakeToy(toyBox.Text)
    end
end)

-- Draggable GUI
local dragging, dragInput, dragStart, startPos
local function update(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
